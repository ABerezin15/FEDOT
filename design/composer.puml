@startuml

class EpdeComposer
class EpdeMetaParams {
    sparsity_rate: Float
}

interface Composer {

    Chain compose_chain(initial_chain, requirements, meta_params)

}

class ComposerRequirements {
    elementary_functions: ElementaryFunctionsRepository
    model_templates: ModelTemplatesRepository
    domain_models: DomainModelsRepository
    atomic_models: AtomicModelsRepository
}

abstract class ComposerMetaParams

class Chain {
    DataStream result()
    void add_operation(new_operation: Operation)
    void update_operation(new_operation: Operation)
    AtomicModel as_atomic_model()
}


Composer ..> ComposerRequirements
Composer ..> ComposerMetaParams
Composer ..> Chain


EpdeComposer ..|> Composer
EpdeMetaParams ..|> ComposerMetaParams
EpdeComposer ..> EpdeMetaParams




@enduml